#!/usr/bin/env node

const header = `digraph {\n`
const footer = `\n}`

let data = ''

process.stdin.on('data', d => {
  data += d
})

process.stdin.on('end', () => {
  process.stdout.write(header + main(data) + footer)
})

const main = str => str
  .split('\n')
  .filter(s => s.length > 0)
  // holy regex! annotated: https://regexr.com/4rltv
  .map(s => s.split(/(\s)(?=(?:[^\)]|\([^\)]*\))*$)/))
  .map(a => a.filter(s => s !== ' '))
  .map(([ value, ...keys ]) => {
    const r = []
    keys.forEach(key => {
      r.push(`"${key}" -> "${value}"`)
    })
    return r
  })
  .reduce((acc, x) => acc.concat(x), [])
  .join('\n')

